version: '3.8'

services:
  cd-backend:
    container_name: cd-backend
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/rest-api --host 0.0.0.0 --port 8080
    ports:
      - "8081:8080"
    volumes:
      - ./cook_droogers.log:/app/cook_droogers.log
      - ./backend/config/config.yaml:/app/config.yaml
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - postgres-master
    networks:
      - cookdroognet

  cd-backend-ro1:
    container_name: cd-backend-ro1
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/rest-api --host 0.0.0.0 --port 8080
    ports:
      - "8082:8080"
    volumes:
      - ./cook_droogers-ro1.log:/app/cook_droogers.log
      - ./backend/config/config-ro.yaml:/app/config.yaml
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - postgres-slave
    networks:
      - cookdroognet

  cd-backend-ro2:
    container_name: cd-backend-ro2
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/rest-api --host 0.0.0.0 --port 8080
    ports:
      - "8083:8080"
    volumes:
      - ./cook_droogers-ro2.log:/app/cook_droogers.log
      - ./backend/config/config-ro.yaml:/app/config.yaml
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - postgres-slave
    networks:
      - cookdroognet

  cd-backend-mirror:
    container_name: cd-backend-mirror
    build:
      context: .
      dockerfile: Dockerfile
    command: /app/rest-api --host 0.0.0.0 --port 8080
    ports:
      - "8084:8080"
    volumes:
      - ./cook_droogers-mirror.log:/app/cook_droogers.log
      - ./backend/config/config.yaml:/app/config.yaml
    depends_on:
      - kafka
      - kafka2
      - kafka3
      - postgres-master
    networks:
      - cookdroognet

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - cookdroognet
    depends_on:
      - zookeeper

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - cookdroognet
    depends_on:
      - zookeeper

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - cookdroognet
    depends_on:
      - zookeeper

  postgres-master:
    container_name: postgres-master
    image: postgres:13.3
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1337"
      POSTGRES_DB: "cook_droogers"
      POSTGRESQL_REPLICATION_MODE: "master"
      POSTGRESQL_REPLICATION_USER: "repl_user"
      POSTGRESQL_REPLICATION_PASSWORD: "1337"
    ports:
      - "15432:5432"
    volumes:
      - ./db/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/var/lib/postgresql/data
    networks:
      - cookdroognet

  postgres-slave:
    container_name: postgres-slave
    image: postgres:13.3
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d admin -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRESQL_REPLICATION_MODE: "slave"
      POSTGRESQL_REPLICATION_USER: "repl_user"
      POSTGRESQL_REPLICATION_PASSWORD: "1337"
      POSTGRESQL_MASTER_HOST: "postgres-master"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1337"
      POSTGRES_DB: "cook_droogers"
    depends_on:
      postgres-master:
        condition: service_healthy
    ports:
      - "15433:5432"
    volumes:
      - ./data/slave:/var/lib/postgresql/data
    networks:
      - cookdroognet

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - cookdroognet

  pgadmin:
    image: dpage/pgadmin4:7
    env_file:
      - .env
    ports:
      - 5435:80
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    environment:
      TZ: "Europe/Moscow"
    depends_on:
      - postgres-master
    networks:
      - cookdroognet

networks:
  cookdroognet:
    driver: bridge