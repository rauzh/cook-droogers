// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArtistDTO artist d t o
//
// swagger:model ArtistDTO
type ArtistDTO struct {

	// activity
	Activity bool `json:"activity,omitempty"`

	// artist id
	ArtistID uint64 `json:"artist_id,omitempty"`

	// contract term
	// Format: date
	ContractTerm strfmt.Date `json:"contract_term,omitempty"`

	// manager id
	ManagerID uint64 `json:"manager_id,omitempty"`

	// nickname
	Nickname string `json:"nickname,omitempty"`

	// user id
	UserID uint64 `json:"user_id,omitempty"`
}

// Validate validates this artist d t o
func (m *ArtistDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContractTerm(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ArtistDTO) validateContractTerm(formats strfmt.Registry) error {
	if swag.IsZero(m.ContractTerm) { // not required
		return nil
	}

	if err := validate.FormatOf("contract_term", "body", "date", m.ContractTerm.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this artist d t o based on context it is used
func (m *ArtistDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ArtistDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArtistDTO) UnmarshalBinary(b []byte) error {
	var res ArtistDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
