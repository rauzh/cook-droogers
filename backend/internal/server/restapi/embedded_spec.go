// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Swagger-Cook-Droogers",
    "version": "1.0.0"
  },
  "host": "0.0.0.0:13337",
  "basePath": "/api",
  "paths": {
    "/artists/{artist_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "artist"
        ],
        "summary": "Get artist data",
        "operationId": "getArtistByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID артиста",
            "name": "artist_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArtistDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such artist",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/heartbeat": {
      "get": {
        "summary": "Check health",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Login, lol",
        "operationId": "login",
        "parameters": [
          {
            "description": "Данные для входа",
            "name": "loginData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "$ref": "#/definitions/AccessTokenDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/managers": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "manager"
        ],
        "summary": "Get list of managers",
        "operationId": "getManagers",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagerDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "manager"
        ],
        "summary": "Create manager",
        "operationId": "addManager",
        "parameters": [
          {
            "description": "Данные для создания менеджера",
            "name": "managerData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateManagerDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Manager successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (your role)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "409": {
            "description": "Already exists",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/managers/{manager_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "manager"
        ],
        "summary": "Get manager data",
        "operationId": "getManagerByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID менеджера",
            "name": "manager_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManagerDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such manager",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Create new user",
        "operationId": "register",
        "parameters": [
          {
            "description": "Данные для регистрации нового пользователя",
            "name": "userData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created",
            "schema": {
              "$ref": "#/definitions/AccessTokenDTO"
            }
          },
          "409": {
            "description": "User already exists",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/releases": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "releases"
        ],
        "summary": "Get releases",
        "operationId": "getRelease",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "releases"
        ],
        "summary": "Upload release",
        "operationId": "addRelease",
        "parameters": [
          {
            "description": "Информация о релизе",
            "name": "release",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadReleaseDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/releases/{release_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "releases"
        ],
        "summary": "Get release data",
        "operationId": "getReleaseByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID релиза",
            "name": "release_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReleaseDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such release",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Get requests",
        "operationId": "getRequests",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RequestDTO"
              }
            }
          },
          "401": {
            "description": "Auth error"
          },
          "403": {
            "description": "Invalid user type"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/requests/contracts": {
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "requests"
        ],
        "summary": "Create sign request",
        "operationId": "signContract",
        "parameters": [
          {
            "description": "Информация для запроса на подписание контракта",
            "name": "signRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSignRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/publications": {
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "requests"
        ],
        "summary": "Create publish request",
        "operationId": "publishReq",
        "parameters": [
          {
            "description": "Поля заявки на публикацию релиза",
            "name": "publication_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePublishRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Get specified request",
        "operationId": "getRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublishRequestDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}/accept": {
      "patch": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Accept specified request",
        "operationId": "acceptRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (or this manager is not maintainer of the request)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}/decline": {
      "patch": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Decline specified request",
        "operationId": "declineRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (or this manager is not maintainer of the request)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/tracks/{track_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "tracks"
        ],
        "summary": "Get track data",
        "operationId": "getTrackByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID трека",
            "name": "track_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrackDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such track",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get list of users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "No rights",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get user data",
        "operationId": "getUserByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID юзера",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenDTO": {
      "type": "object",
      "properties": {
        "access_key": {
          "description": "JWT access key",
          "type": "string"
        }
      }
    },
    "ArtistDTO": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "boolean"
        },
        "artist_id": {
          "type": "integer",
          "format": "uint64"
        },
        "contract_term": {
          "type": "string",
          "format": "date"
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "nickname": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "CreateManagerDTO": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "description": "ID пользователя",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        }
      }
    },
    "CreatePublishRequestDTO": {
      "type": "object",
      "properties": {
        "expected_date": {
          "type": "string",
          "format": "date"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "CreateSignRequestDTO": {
      "type": "object",
      "required": [
        "nickname"
      ],
      "properties": {
        "nickname": {
          "description": "Псевдоним",
          "type": "string"
        }
      }
    },
    "LeErrorMessage": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "LoginUserDTO": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "description": "Email пользователя",
          "type": "string",
          "format": "email"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "format": "password"
        }
      }
    },
    "ManagerDTO": {
      "type": "object",
      "properties": {
        "artists": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "PublishRequestDTO": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/RequestDTO"
        },
        "description": {
          "type": "string"
        },
        "expected_date": {
          "type": "string",
          "format": "date"
        },
        "grade": {
          "type": "integer"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "RegUserDTO": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RegisterUserDTO": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "description": "Email пользователя",
          "type": "string",
          "format": "email"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string"
        },
        "username": {
          "description": "Имя пользователя",
          "type": "string"
        }
      }
    },
    "ReleaseDTO": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "integer",
          "format": "uint64"
        },
        "date_creation": {
          "type": "string",
          "format": "date"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        },
        "status": {
          "type": "string",
          "enum": [
            "Unpublished",
            "Published"
          ]
        },
        "title": {
          "type": "string"
        },
        "tracks": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        }
      }
    },
    "RequestDTO": {
      "type": "object",
      "properties": {
        "applier_id": {
          "type": "integer",
          "format": "uint64"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "request_id": {
          "type": "integer",
          "format": "uint64"
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Processing",
            "On approval",
            "Closed"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Publish",
            "Sign"
          ]
        }
      }
    },
    "SignRequestDTO": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/RequestDTO"
        },
        "description": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        }
      }
    },
    "StatsDTO": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "likes": {
          "type": "integer",
          "format": "uint64"
        },
        "stat_id": {
          "type": "integer",
          "format": "uint64"
        },
        "streams": {
          "type": "integer",
          "format": "uint64"
        },
        "track_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "TrackDTO": {
      "type": "object",
      "required": [
        "title",
        "duration",
        "genre",
        "type"
      ],
      "properties": {
        "artists": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "duration": {
          "type": "integer",
          "format": "uint64"
        },
        "genre": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "track_id": {
          "type": "integer",
          "format": "uint64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "UploadReleaseDTO": {
      "type": "object",
      "required": [
        "title",
        "date",
        "tracks"
      ],
      "properties": {
        "date": {
          "description": "Дата написания релиза",
          "type": "string",
          "format": "date"
        },
        "title": {
          "description": "Название релиза",
          "type": "string"
        },
        "tracks": {
          "description": "Треки данного релиза",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackDTO"
          }
        }
      }
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "headers": {
        "WWW_Authenticate": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWTAuth": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "artist"
    },
    {
      "name": "manager"
    },
    {
      "name": "users"
    },
    {
      "name": "requests"
    },
    {
      "name": "tracks"
    },
    {
      "name": "releases"
    },
    {
      "name": "auth"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Swagger-Cook-Droogers",
    "version": "1.0.0"
  },
  "host": "0.0.0.0:13337",
  "basePath": "/api",
  "paths": {
    "/artists/{artist_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "artist"
        ],
        "summary": "Get artist data",
        "operationId": "getArtistByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID артиста",
            "name": "artist_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArtistDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such artist",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/heartbeat": {
      "get": {
        "summary": "Check health",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Login, lol",
        "operationId": "login",
        "parameters": [
          {
            "description": "Данные для входа",
            "name": "loginData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "schema": {
              "$ref": "#/definitions/AccessTokenDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/managers": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "manager"
        ],
        "summary": "Get list of managers",
        "operationId": "getManagers",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagerDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "manager"
        ],
        "summary": "Create manager",
        "operationId": "addManager",
        "parameters": [
          {
            "description": "Данные для создания менеджера",
            "name": "managerData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateManagerDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Manager successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (your role)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "409": {
            "description": "Already exists",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/managers/{manager_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "manager"
        ],
        "summary": "Get manager data",
        "operationId": "getManagerByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID менеджера",
            "name": "manager_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ManagerDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such manager",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Create new user",
        "operationId": "register",
        "parameters": [
          {
            "description": "Данные для регистрации нового пользователя",
            "name": "userData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUserDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully created",
            "schema": {
              "$ref": "#/definitions/AccessTokenDTO"
            }
          },
          "409": {
            "description": "User already exists",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/releases": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "releases"
        ],
        "summary": "Get releases",
        "operationId": "getRelease",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "releases"
        ],
        "summary": "Upload release",
        "operationId": "addRelease",
        "parameters": [
          {
            "description": "Информация о релизе",
            "name": "release",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadReleaseDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/releases/{release_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "releases"
        ],
        "summary": "Get release data",
        "operationId": "getReleaseByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID релиза",
            "name": "release_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReleaseDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such release",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Get requests",
        "operationId": "getRequests",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RequestDTO"
              }
            }
          },
          "401": {
            "description": "Auth error"
          },
          "403": {
            "description": "Invalid user type"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/requests/contracts": {
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "requests"
        ],
        "summary": "Create sign request",
        "operationId": "signContract",
        "parameters": [
          {
            "description": "Информация для запроса на подписание контракта",
            "name": "signRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSignRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/publications": {
      "post": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "requests"
        ],
        "summary": "Create publish request",
        "operationId": "publishReq",
        "parameters": [
          {
            "description": "Поля заявки на публикацию релиза",
            "name": "publication_info",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePublishRequestDTO"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Request successfully created"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Get specified request",
        "operationId": "getRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PublishRequestDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}/accept": {
      "patch": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Accept specified request",
        "operationId": "acceptRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (or this manager is not maintainer of the request)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/requests/{req_id}/decline": {
      "patch": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "requests"
        ],
        "summary": "Decline specified request",
        "operationId": "declineRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID заявки",
            "name": "req_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type (or this manager is not maintainer of the request)",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such request",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/tracks/{track_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "tracks"
        ],
        "summary": "Get track data",
        "operationId": "getTrackByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID трека",
            "name": "track_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TrackDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Invalid user type",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such track",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get list of users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDTO"
              }
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "No rights",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "security": [
          {
            "JWTAuth": []
          }
        ],
        "tags": [
          "users"
        ],
        "summary": "Get user data",
        "operationId": "getUserByID",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "ID юзера",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "401": {
            "description": "Auth error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "404": {
            "description": "No such user",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "422": {
            "description": "Invalid params",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/LeErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenDTO": {
      "type": "object",
      "properties": {
        "access_key": {
          "description": "JWT access key",
          "type": "string"
        }
      }
    },
    "ArtistDTO": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "boolean"
        },
        "artist_id": {
          "type": "integer",
          "format": "uint64"
        },
        "contract_term": {
          "type": "string",
          "format": "date"
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "nickname": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "CreateManagerDTO": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "description": "ID пользователя",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        }
      }
    },
    "CreatePublishRequestDTO": {
      "type": "object",
      "properties": {
        "expected_date": {
          "type": "string",
          "format": "date"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "CreateSignRequestDTO": {
      "type": "object",
      "required": [
        "nickname"
      ],
      "properties": {
        "nickname": {
          "description": "Псевдоним",
          "type": "string"
        }
      }
    },
    "LeErrorMessage": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "LoginUserDTO": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "description": "Email пользователя",
          "type": "string",
          "format": "email"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "format": "password"
        }
      }
    },
    "ManagerDTO": {
      "type": "object",
      "properties": {
        "artists": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "PublishRequestDTO": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/RequestDTO"
        },
        "description": {
          "type": "string"
        },
        "expected_date": {
          "type": "string",
          "format": "date"
        },
        "grade": {
          "type": "integer"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "RegUserDTO": {
      "type": "object",
      "required": [
        "name",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RegisterUserDTO": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "description": "Email пользователя",
          "type": "string",
          "format": "email"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string"
        },
        "username": {
          "description": "Имя пользователя",
          "type": "string"
        }
      }
    },
    "ReleaseDTO": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "integer",
          "format": "uint64"
        },
        "date_creation": {
          "type": "string",
          "format": "date"
        },
        "release_id": {
          "type": "integer",
          "format": "uint64"
        },
        "status": {
          "type": "string",
          "enum": [
            "Unpublished",
            "Published"
          ]
        },
        "title": {
          "type": "string"
        },
        "tracks": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        }
      }
    },
    "RequestDTO": {
      "type": "object",
      "properties": {
        "applier_id": {
          "type": "integer",
          "format": "uint64"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "manager_id": {
          "type": "integer",
          "format": "uint64"
        },
        "request_id": {
          "type": "integer",
          "format": "uint64"
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Processing",
            "On approval",
            "Closed"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Publish",
            "Sign"
          ]
        }
      }
    },
    "SignRequestDTO": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/RequestDTO"
        },
        "description": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        }
      }
    },
    "StatsDTO": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "likes": {
          "type": "integer",
          "format": "uint64"
        },
        "stat_id": {
          "type": "integer",
          "format": "uint64"
        },
        "streams": {
          "type": "integer",
          "format": "uint64"
        },
        "track_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "TrackDTO": {
      "type": "object",
      "required": [
        "title",
        "duration",
        "genre",
        "type"
      ],
      "properties": {
        "artists": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "duration": {
          "type": "integer",
          "format": "uint64"
        },
        "genre": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "track_id": {
          "type": "integer",
          "format": "uint64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "UploadReleaseDTO": {
      "type": "object",
      "required": [
        "title",
        "date",
        "tracks"
      ],
      "properties": {
        "date": {
          "description": "Дата написания релиза",
          "type": "string",
          "format": "date"
        },
        "title": {
          "description": "Название релиза",
          "type": "string"
        },
        "tracks": {
          "description": "Треки данного релиза",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackDTO"
          }
        }
      }
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ]
        },
        "user_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "headers": {
        "WWW_Authenticate": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWTAuth": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "artist"
    },
    {
      "name": "manager"
    },
    {
      "name": "users"
    },
    {
      "name": "requests"
    },
    {
      "name": "tracks"
    },
    {
      "name": "releases"
    },
    {
      "name": "auth"
    }
  ]
}`))
}
