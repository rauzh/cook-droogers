// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/server/models"
)

// AddReleaseCreatedCode is the HTTP code returned for type AddReleaseCreated
const AddReleaseCreatedCode int = 201

/*
AddReleaseCreated Request successfully created

swagger:response addReleaseCreated
*/
type AddReleaseCreated struct {
}

// NewAddReleaseCreated creates AddReleaseCreated with default headers values
func NewAddReleaseCreated() *AddReleaseCreated {

	return &AddReleaseCreated{}
}

// WriteResponse to the client
func (o *AddReleaseCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddReleaseBadRequestCode is the HTTP code returned for type AddReleaseBadRequest
const AddReleaseBadRequestCode int = 400

/*
AddReleaseBadRequest Invalid params form

swagger:response addReleaseBadRequest
*/
type AddReleaseBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewAddReleaseBadRequest creates AddReleaseBadRequest with default headers values
func NewAddReleaseBadRequest() *AddReleaseBadRequest {

	return &AddReleaseBadRequest{}
}

// WithPayload adds the payload to the add release bad request response
func (o *AddReleaseBadRequest) WithPayload(payload *models.LeErrorMessage) *AddReleaseBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add release bad request response
func (o *AddReleaseBadRequest) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddReleaseBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddReleaseUnauthorizedCode is the HTTP code returned for type AddReleaseUnauthorized
const AddReleaseUnauthorizedCode int = 401

/*
AddReleaseUnauthorized Auth error

swagger:response addReleaseUnauthorized
*/
type AddReleaseUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewAddReleaseUnauthorized creates AddReleaseUnauthorized with default headers values
func NewAddReleaseUnauthorized() *AddReleaseUnauthorized {

	return &AddReleaseUnauthorized{}
}

// WithPayload adds the payload to the add release unauthorized response
func (o *AddReleaseUnauthorized) WithPayload(payload *models.LeErrorMessage) *AddReleaseUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add release unauthorized response
func (o *AddReleaseUnauthorized) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddReleaseUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddReleaseForbiddenCode is the HTTP code returned for type AddReleaseForbidden
const AddReleaseForbiddenCode int = 403

/*
AddReleaseForbidden Invalid user type

swagger:response addReleaseForbidden
*/
type AddReleaseForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewAddReleaseForbidden creates AddReleaseForbidden with default headers values
func NewAddReleaseForbidden() *AddReleaseForbidden {

	return &AddReleaseForbidden{}
}

// WithPayload adds the payload to the add release forbidden response
func (o *AddReleaseForbidden) WithPayload(payload *models.LeErrorMessage) *AddReleaseForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add release forbidden response
func (o *AddReleaseForbidden) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddReleaseForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddReleaseUnprocessableEntityCode is the HTTP code returned for type AddReleaseUnprocessableEntity
const AddReleaseUnprocessableEntityCode int = 422

/*
AddReleaseUnprocessableEntity Invalid params

swagger:response addReleaseUnprocessableEntity
*/
type AddReleaseUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewAddReleaseUnprocessableEntity creates AddReleaseUnprocessableEntity with default headers values
func NewAddReleaseUnprocessableEntity() *AddReleaseUnprocessableEntity {

	return &AddReleaseUnprocessableEntity{}
}

// WithPayload adds the payload to the add release unprocessable entity response
func (o *AddReleaseUnprocessableEntity) WithPayload(payload *models.LeErrorMessage) *AddReleaseUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add release unprocessable entity response
func (o *AddReleaseUnprocessableEntity) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddReleaseUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddReleaseInternalServerErrorCode is the HTTP code returned for type AddReleaseInternalServerError
const AddReleaseInternalServerErrorCode int = 500

/*
AddReleaseInternalServerError Internal error

swagger:response addReleaseInternalServerError
*/
type AddReleaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewAddReleaseInternalServerError creates AddReleaseInternalServerError with default headers values
func NewAddReleaseInternalServerError() *AddReleaseInternalServerError {

	return &AddReleaseInternalServerError{}
}

// WithPayload adds the payload to the add release internal server error response
func (o *AddReleaseInternalServerError) WithPayload(payload *models.LeErrorMessage) *AddReleaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add release internal server error response
func (o *AddReleaseInternalServerError) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddReleaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
