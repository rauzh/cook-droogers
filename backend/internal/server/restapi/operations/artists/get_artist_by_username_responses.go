// Code generated by go-swagger; DO NOT EDIT.

package artists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/server/models"
)

// GetArtistByUsernameOKCode is the HTTP code returned for type GetArtistByUsernameOK
const GetArtistByUsernameOKCode int = 200

/*
GetArtistByUsernameOK Success

swagger:response getArtistByUsernameOK
*/
type GetArtistByUsernameOK struct {

	/*
	  In: Body
	*/
	Payload *models.ArtistDTO `json:"body,omitempty"`
}

// NewGetArtistByUsernameOK creates GetArtistByUsernameOK with default headers values
func NewGetArtistByUsernameOK() *GetArtistByUsernameOK {

	return &GetArtistByUsernameOK{}
}

// WithPayload adds the payload to the get artist by username o k response
func (o *GetArtistByUsernameOK) WithPayload(payload *models.ArtistDTO) *GetArtistByUsernameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username o k response
func (o *GetArtistByUsernameOK) SetPayload(payload *models.ArtistDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArtistByUsernameUnauthorizedCode is the HTTP code returned for type GetArtistByUsernameUnauthorized
const GetArtistByUsernameUnauthorizedCode int = 401

/*
GetArtistByUsernameUnauthorized Auth error

swagger:response getArtistByUsernameUnauthorized
*/
type GetArtistByUsernameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetArtistByUsernameUnauthorized creates GetArtistByUsernameUnauthorized with default headers values
func NewGetArtistByUsernameUnauthorized() *GetArtistByUsernameUnauthorized {

	return &GetArtistByUsernameUnauthorized{}
}

// WithPayload adds the payload to the get artist by username unauthorized response
func (o *GetArtistByUsernameUnauthorized) WithPayload(payload *models.LeErrorMessage) *GetArtistByUsernameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username unauthorized response
func (o *GetArtistByUsernameUnauthorized) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArtistByUsernameForbiddenCode is the HTTP code returned for type GetArtistByUsernameForbidden
const GetArtistByUsernameForbiddenCode int = 403

/*
GetArtistByUsernameForbidden Invalid user type

swagger:response getArtistByUsernameForbidden
*/
type GetArtistByUsernameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetArtistByUsernameForbidden creates GetArtistByUsernameForbidden with default headers values
func NewGetArtistByUsernameForbidden() *GetArtistByUsernameForbidden {

	return &GetArtistByUsernameForbidden{}
}

// WithPayload adds the payload to the get artist by username forbidden response
func (o *GetArtistByUsernameForbidden) WithPayload(payload *models.LeErrorMessage) *GetArtistByUsernameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username forbidden response
func (o *GetArtistByUsernameForbidden) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArtistByUsernameNotFoundCode is the HTTP code returned for type GetArtistByUsernameNotFound
const GetArtistByUsernameNotFoundCode int = 404

/*
GetArtistByUsernameNotFound No such artist

swagger:response getArtistByUsernameNotFound
*/
type GetArtistByUsernameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetArtistByUsernameNotFound creates GetArtistByUsernameNotFound with default headers values
func NewGetArtistByUsernameNotFound() *GetArtistByUsernameNotFound {

	return &GetArtistByUsernameNotFound{}
}

// WithPayload adds the payload to the get artist by username not found response
func (o *GetArtistByUsernameNotFound) WithPayload(payload *models.LeErrorMessage) *GetArtistByUsernameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username not found response
func (o *GetArtistByUsernameNotFound) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArtistByUsernameUnprocessableEntityCode is the HTTP code returned for type GetArtistByUsernameUnprocessableEntity
const GetArtistByUsernameUnprocessableEntityCode int = 422

/*
GetArtistByUsernameUnprocessableEntity Invalid params

swagger:response getArtistByUsernameUnprocessableEntity
*/
type GetArtistByUsernameUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetArtistByUsernameUnprocessableEntity creates GetArtistByUsernameUnprocessableEntity with default headers values
func NewGetArtistByUsernameUnprocessableEntity() *GetArtistByUsernameUnprocessableEntity {

	return &GetArtistByUsernameUnprocessableEntity{}
}

// WithPayload adds the payload to the get artist by username unprocessable entity response
func (o *GetArtistByUsernameUnprocessableEntity) WithPayload(payload *models.LeErrorMessage) *GetArtistByUsernameUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username unprocessable entity response
func (o *GetArtistByUsernameUnprocessableEntity) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArtistByUsernameInternalServerErrorCode is the HTTP code returned for type GetArtistByUsernameInternalServerError
const GetArtistByUsernameInternalServerErrorCode int = 500

/*
GetArtistByUsernameInternalServerError Internal error

swagger:response getArtistByUsernameInternalServerError
*/
type GetArtistByUsernameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetArtistByUsernameInternalServerError creates GetArtistByUsernameInternalServerError with default headers values
func NewGetArtistByUsernameInternalServerError() *GetArtistByUsernameInternalServerError {

	return &GetArtistByUsernameInternalServerError{}
}

// WithPayload adds the payload to the get artist by username internal server error response
func (o *GetArtistByUsernameInternalServerError) WithPayload(payload *models.LeErrorMessage) *GetArtistByUsernameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get artist by username internal server error response
func (o *GetArtistByUsernameInternalServerError) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArtistByUsernameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
