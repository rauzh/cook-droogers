// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/server/models"
)

// GetRequestOKCode is the HTTP code returned for type GetRequestOK
const GetRequestOKCode int = 200

/*
GetRequestOK Success

swagger:response getRequestOK
*/
type GetRequestOK struct {

	/*
	  In: Body
	*/
	Payload *models.PublishRequestDTO `json:"body,omitempty"`
}

// NewGetRequestOK creates GetRequestOK with default headers values
func NewGetRequestOK() *GetRequestOK {

	return &GetRequestOK{}
}

// WithPayload adds the payload to the get request o k response
func (o *GetRequestOK) WithPayload(payload *models.PublishRequestDTO) *GetRequestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request o k response
func (o *GetRequestOK) SetPayload(payload *models.PublishRequestDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRequestUnauthorizedCode is the HTTP code returned for type GetRequestUnauthorized
const GetRequestUnauthorizedCode int = 401

/*
GetRequestUnauthorized Auth error

swagger:response getRequestUnauthorized
*/
type GetRequestUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetRequestUnauthorized creates GetRequestUnauthorized with default headers values
func NewGetRequestUnauthorized() *GetRequestUnauthorized {

	return &GetRequestUnauthorized{}
}

// WithPayload adds the payload to the get request unauthorized response
func (o *GetRequestUnauthorized) WithPayload(payload *models.LeErrorMessage) *GetRequestUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request unauthorized response
func (o *GetRequestUnauthorized) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRequestForbiddenCode is the HTTP code returned for type GetRequestForbidden
const GetRequestForbiddenCode int = 403

/*
GetRequestForbidden Invalid user type

swagger:response getRequestForbidden
*/
type GetRequestForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetRequestForbidden creates GetRequestForbidden with default headers values
func NewGetRequestForbidden() *GetRequestForbidden {

	return &GetRequestForbidden{}
}

// WithPayload adds the payload to the get request forbidden response
func (o *GetRequestForbidden) WithPayload(payload *models.LeErrorMessage) *GetRequestForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request forbidden response
func (o *GetRequestForbidden) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRequestNotFoundCode is the HTTP code returned for type GetRequestNotFound
const GetRequestNotFoundCode int = 404

/*
GetRequestNotFound No such request

swagger:response getRequestNotFound
*/
type GetRequestNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetRequestNotFound creates GetRequestNotFound with default headers values
func NewGetRequestNotFound() *GetRequestNotFound {

	return &GetRequestNotFound{}
}

// WithPayload adds the payload to the get request not found response
func (o *GetRequestNotFound) WithPayload(payload *models.LeErrorMessage) *GetRequestNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request not found response
func (o *GetRequestNotFound) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRequestUnprocessableEntityCode is the HTTP code returned for type GetRequestUnprocessableEntity
const GetRequestUnprocessableEntityCode int = 422

/*
GetRequestUnprocessableEntity Invalid params

swagger:response getRequestUnprocessableEntity
*/
type GetRequestUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetRequestUnprocessableEntity creates GetRequestUnprocessableEntity with default headers values
func NewGetRequestUnprocessableEntity() *GetRequestUnprocessableEntity {

	return &GetRequestUnprocessableEntity{}
}

// WithPayload adds the payload to the get request unprocessable entity response
func (o *GetRequestUnprocessableEntity) WithPayload(payload *models.LeErrorMessage) *GetRequestUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request unprocessable entity response
func (o *GetRequestUnprocessableEntity) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRequestInternalServerErrorCode is the HTTP code returned for type GetRequestInternalServerError
const GetRequestInternalServerErrorCode int = 500

/*
GetRequestInternalServerError Internal error

swagger:response getRequestInternalServerError
*/
type GetRequestInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetRequestInternalServerError creates GetRequestInternalServerError with default headers values
func NewGetRequestInternalServerError() *GetRequestInternalServerError {

	return &GetRequestInternalServerError{}
}

// WithPayload adds the payload to the get request internal server error response
func (o *GetRequestInternalServerError) WithPayload(payload *models.LeErrorMessage) *GetRequestInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get request internal server error response
func (o *GetRequestInternalServerError) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
