// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/handlers/models"
)

// PublishReqCreatedCode is the HTTP code returned for type PublishReqCreated
const PublishReqCreatedCode int = 201

/*
PublishReqCreated Request successfully created

swagger:response publishReqCreated
*/
type PublishReqCreated struct {
}

// NewPublishReqCreated creates PublishReqCreated with default headers values
func NewPublishReqCreated() *PublishReqCreated {

	return &PublishReqCreated{}
}

// WriteResponse to the client
func (o *PublishReqCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// PublishReqUnauthorizedCode is the HTTP code returned for type PublishReqUnauthorized
const PublishReqUnauthorizedCode int = 401

/*
PublishReqUnauthorized Auth error

swagger:response publishReqUnauthorized
*/
type PublishReqUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewPublishReqUnauthorized creates PublishReqUnauthorized with default headers values
func NewPublishReqUnauthorized() *PublishReqUnauthorized {

	return &PublishReqUnauthorized{}
}

// WithPayload adds the payload to the publish req unauthorized response
func (o *PublishReqUnauthorized) WithPayload(payload *models.LeErrorMessage) *PublishReqUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish req unauthorized response
func (o *PublishReqUnauthorized) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishReqUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PublishReqForbiddenCode is the HTTP code returned for type PublishReqForbidden
const PublishReqForbiddenCode int = 403

/*
PublishReqForbidden Invalid user type

swagger:response publishReqForbidden
*/
type PublishReqForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewPublishReqForbidden creates PublishReqForbidden with default headers values
func NewPublishReqForbidden() *PublishReqForbidden {

	return &PublishReqForbidden{}
}

// WithPayload adds the payload to the publish req forbidden response
func (o *PublishReqForbidden) WithPayload(payload *models.LeErrorMessage) *PublishReqForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish req forbidden response
func (o *PublishReqForbidden) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishReqForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PublishReqUnprocessableEntityCode is the HTTP code returned for type PublishReqUnprocessableEntity
const PublishReqUnprocessableEntityCode int = 422

/*
PublishReqUnprocessableEntity Invalid params

swagger:response publishReqUnprocessableEntity
*/
type PublishReqUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewPublishReqUnprocessableEntity creates PublishReqUnprocessableEntity with default headers values
func NewPublishReqUnprocessableEntity() *PublishReqUnprocessableEntity {

	return &PublishReqUnprocessableEntity{}
}

// WithPayload adds the payload to the publish req unprocessable entity response
func (o *PublishReqUnprocessableEntity) WithPayload(payload *models.LeErrorMessage) *PublishReqUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish req unprocessable entity response
func (o *PublishReqUnprocessableEntity) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishReqUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PublishReqInternalServerErrorCode is the HTTP code returned for type PublishReqInternalServerError
const PublishReqInternalServerErrorCode int = 500

/*
PublishReqInternalServerError Internal error

swagger:response publishReqInternalServerError
*/
type PublishReqInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewPublishReqInternalServerError creates PublishReqInternalServerError with default headers values
func NewPublishReqInternalServerError() *PublishReqInternalServerError {

	return &PublishReqInternalServerError{}
}

// WithPayload adds the payload to the publish req internal server error response
func (o *PublishReqInternalServerError) WithPayload(payload *models.LeErrorMessage) *PublishReqInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the publish req internal server error response
func (o *PublishReqInternalServerError) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PublishReqInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
