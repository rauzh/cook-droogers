// Code generated by go-swagger; DO NOT EDIT.

package artist

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/handlers/models"
)

// GetReleaseOKCode is the HTTP code returned for type GetReleaseOK
const GetReleaseOKCode int = 200

/*
GetReleaseOK Success

swagger:response getReleaseOK
*/
type GetReleaseOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ReleaseDTO `json:"body,omitempty"`
}

// NewGetReleaseOK creates GetReleaseOK with default headers values
func NewGetReleaseOK() *GetReleaseOK {

	return &GetReleaseOK{}
}

// WithPayload adds the payload to the get release o k response
func (o *GetReleaseOK) WithPayload(payload []*models.ReleaseDTO) *GetReleaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release o k response
func (o *GetReleaseOK) SetPayload(payload []*models.ReleaseDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ReleaseDTO, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetReleaseInternalServerErrorCode is the HTTP code returned for type GetReleaseInternalServerError
const GetReleaseInternalServerErrorCode int = 500

/*
GetReleaseInternalServerError Internal error

swagger:response getReleaseInternalServerError
*/
type GetReleaseInternalServerError struct {
}

// NewGetReleaseInternalServerError creates GetReleaseInternalServerError with default headers values
func NewGetReleaseInternalServerError() *GetReleaseInternalServerError {

	return &GetReleaseInternalServerError{}
}

// WriteResponse to the client
func (o *GetReleaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
