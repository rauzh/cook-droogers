// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/handlers/models"
)

// GetManagersOKCode is the HTTP code returned for type GetManagersOK
const GetManagersOKCode int = 200

/*
GetManagersOK Success

swagger:response getManagersOK
*/
type GetManagersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ManagerDTO `json:"body,omitempty"`
}

// NewGetManagersOK creates GetManagersOK with default headers values
func NewGetManagersOK() *GetManagersOK {

	return &GetManagersOK{}
}

// WithPayload adds the payload to the get managers o k response
func (o *GetManagersOK) WithPayload(payload []*models.ManagerDTO) *GetManagersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get managers o k response
func (o *GetManagersOK) SetPayload(payload []*models.ManagerDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetManagersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ManagerDTO, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetManagersInternalServerErrorCode is the HTTP code returned for type GetManagersInternalServerError
const GetManagersInternalServerErrorCode int = 500

/*
GetManagersInternalServerError Internal error

swagger:response getManagersInternalServerError
*/
type GetManagersInternalServerError struct {
}

// NewGetManagersInternalServerError creates GetManagersInternalServerError with default headers values
func NewGetManagersInternalServerError() *GetManagersInternalServerError {

	return &GetManagersInternalServerError{}
}

// WriteResponse to the client
func (o *GetManagersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
