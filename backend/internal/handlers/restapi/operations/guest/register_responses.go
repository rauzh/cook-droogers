// Code generated by go-swagger; DO NOT EDIT.

package guest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RegisterCreatedCode is the HTTP code returned for type RegisterCreated
const RegisterCreatedCode int = 201

/*
RegisterCreated User successfully created

swagger:response registerCreated
*/
type RegisterCreated struct {
}

// NewRegisterCreated creates RegisterCreated with default headers values
func NewRegisterCreated() *RegisterCreated {

	return &RegisterCreated{}
}

// WriteResponse to the client
func (o *RegisterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// RegisterForbiddenCode is the HTTP code returned for type RegisterForbidden
const RegisterForbiddenCode int = 403

/*
RegisterForbidden User alredy exists

swagger:response registerForbidden
*/
type RegisterForbidden struct {
}

// NewRegisterForbidden creates RegisterForbidden with default headers values
func NewRegisterForbidden() *RegisterForbidden {

	return &RegisterForbidden{}
}

// WriteResponse to the client
func (o *RegisterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// RegisterInternalServerErrorCode is the HTTP code returned for type RegisterInternalServerError
const RegisterInternalServerErrorCode int = 500

/*
RegisterInternalServerError Internal error

swagger:response registerInternalServerError
*/
type RegisterInternalServerError struct {
}

// NewRegisterInternalServerError creates RegisterInternalServerError with default headers values
func NewRegisterInternalServerError() *RegisterInternalServerError {

	return &RegisterInternalServerError{}
}

// WriteResponse to the client
func (o *RegisterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
