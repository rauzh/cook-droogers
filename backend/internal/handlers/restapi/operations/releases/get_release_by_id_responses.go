// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cookdroogers/internal/handlers/models"
)

// GetReleaseByIDOKCode is the HTTP code returned for type GetReleaseByIDOK
const GetReleaseByIDOKCode int = 200

/*
GetReleaseByIDOK Success

swagger:response getReleaseByIdOK
*/
type GetReleaseByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ReleaseDTO `json:"body,omitempty"`
}

// NewGetReleaseByIDOK creates GetReleaseByIDOK with default headers values
func NewGetReleaseByIDOK() *GetReleaseByIDOK {

	return &GetReleaseByIDOK{}
}

// WithPayload adds the payload to the get release by Id o k response
func (o *GetReleaseByIDOK) WithPayload(payload *models.ReleaseDTO) *GetReleaseByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id o k response
func (o *GetReleaseByIDOK) SetPayload(payload *models.ReleaseDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReleaseByIDUnauthorizedCode is the HTTP code returned for type GetReleaseByIDUnauthorized
const GetReleaseByIDUnauthorizedCode int = 401

/*
GetReleaseByIDUnauthorized Auth error

swagger:response getReleaseByIdUnauthorized
*/
type GetReleaseByIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetReleaseByIDUnauthorized creates GetReleaseByIDUnauthorized with default headers values
func NewGetReleaseByIDUnauthorized() *GetReleaseByIDUnauthorized {

	return &GetReleaseByIDUnauthorized{}
}

// WithPayload adds the payload to the get release by Id unauthorized response
func (o *GetReleaseByIDUnauthorized) WithPayload(payload *models.LeErrorMessage) *GetReleaseByIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id unauthorized response
func (o *GetReleaseByIDUnauthorized) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReleaseByIDForbiddenCode is the HTTP code returned for type GetReleaseByIDForbidden
const GetReleaseByIDForbiddenCode int = 403

/*
GetReleaseByIDForbidden Invalid user type

swagger:response getReleaseByIdForbidden
*/
type GetReleaseByIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetReleaseByIDForbidden creates GetReleaseByIDForbidden with default headers values
func NewGetReleaseByIDForbidden() *GetReleaseByIDForbidden {

	return &GetReleaseByIDForbidden{}
}

// WithPayload adds the payload to the get release by Id forbidden response
func (o *GetReleaseByIDForbidden) WithPayload(payload *models.LeErrorMessage) *GetReleaseByIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id forbidden response
func (o *GetReleaseByIDForbidden) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReleaseByIDNotFoundCode is the HTTP code returned for type GetReleaseByIDNotFound
const GetReleaseByIDNotFoundCode int = 404

/*
GetReleaseByIDNotFound No such release

swagger:response getReleaseByIdNotFound
*/
type GetReleaseByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetReleaseByIDNotFound creates GetReleaseByIDNotFound with default headers values
func NewGetReleaseByIDNotFound() *GetReleaseByIDNotFound {

	return &GetReleaseByIDNotFound{}
}

// WithPayload adds the payload to the get release by Id not found response
func (o *GetReleaseByIDNotFound) WithPayload(payload *models.LeErrorMessage) *GetReleaseByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id not found response
func (o *GetReleaseByIDNotFound) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReleaseByIDUnprocessableEntityCode is the HTTP code returned for type GetReleaseByIDUnprocessableEntity
const GetReleaseByIDUnprocessableEntityCode int = 422

/*
GetReleaseByIDUnprocessableEntity Invalid params

swagger:response getReleaseByIdUnprocessableEntity
*/
type GetReleaseByIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetReleaseByIDUnprocessableEntity creates GetReleaseByIDUnprocessableEntity with default headers values
func NewGetReleaseByIDUnprocessableEntity() *GetReleaseByIDUnprocessableEntity {

	return &GetReleaseByIDUnprocessableEntity{}
}

// WithPayload adds the payload to the get release by Id unprocessable entity response
func (o *GetReleaseByIDUnprocessableEntity) WithPayload(payload *models.LeErrorMessage) *GetReleaseByIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id unprocessable entity response
func (o *GetReleaseByIDUnprocessableEntity) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetReleaseByIDInternalServerErrorCode is the HTTP code returned for type GetReleaseByIDInternalServerError
const GetReleaseByIDInternalServerErrorCode int = 500

/*
GetReleaseByIDInternalServerError Internal error

swagger:response getReleaseByIdInternalServerError
*/
type GetReleaseByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.LeErrorMessage `json:"body,omitempty"`
}

// NewGetReleaseByIDInternalServerError creates GetReleaseByIDInternalServerError with default headers values
func NewGetReleaseByIDInternalServerError() *GetReleaseByIDInternalServerError {

	return &GetReleaseByIDInternalServerError{}
}

// WithPayload adds the payload to the get release by Id internal server error response
func (o *GetReleaseByIDInternalServerError) WithPayload(payload *models.LeErrorMessage) *GetReleaseByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get release by Id internal server error response
func (o *GetReleaseByIDInternalServerError) SetPayload(payload *models.LeErrorMessage) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetReleaseByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
