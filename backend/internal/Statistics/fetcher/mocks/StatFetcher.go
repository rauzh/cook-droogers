// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	models "cookdroogers/models"

	mock "github.com/stretchr/testify/mock"
)

// StatFetcher is an autogenerated mock type for the StatFetcher type
type StatFetcher struct {
	mock.Mock
}

type StatFetcher_Expecter struct {
	mock *mock.Mock
}

func (_m *StatFetcher) EXPECT() *StatFetcher_Expecter {
	return &StatFetcher_Expecter{mock: &_m.Mock}
}

// Fetch provides a mock function with given fields: tracks
func (_m *StatFetcher) Fetch(tracks []models.Track) ([]models.Statistics, error) {
	ret := _m.Called(tracks)

	if len(ret) == 0 {
		panic("no return value specified for Fetch")
	}

	var r0 []models.Statistics
	var r1 error
	if rf, ok := ret.Get(0).(func([]models.Track) ([]models.Statistics, error)); ok {
		return rf(tracks)
	}
	if rf, ok := ret.Get(0).(func([]models.Track) []models.Statistics); ok {
		r0 = rf(tracks)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Statistics)
		}
	}

	if rf, ok := ret.Get(1).(func([]models.Track) error); ok {
		r1 = rf(tracks)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StatFetcher_Fetch_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Fetch'
type StatFetcher_Fetch_Call struct {
	*mock.Call
}

// Fetch is a helper method to define mock.On call
//   - tracks []models.Track
func (_e *StatFetcher_Expecter) Fetch(tracks interface{}) *StatFetcher_Fetch_Call {
	return &StatFetcher_Fetch_Call{Call: _e.mock.On("Fetch", tracks)}
}

func (_c *StatFetcher_Fetch_Call) Run(run func(tracks []models.Track)) *StatFetcher_Fetch_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]models.Track))
	})
	return _c
}

func (_c *StatFetcher_Fetch_Call) Return(_a0 []models.Statistics, _a1 error) *StatFetcher_Fetch_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *StatFetcher_Fetch_Call) RunAndReturn(run func([]models.Track) ([]models.Statistics, error)) *StatFetcher_Fetch_Call {
	_c.Call.Return(run)
	return _c
}

// NewStatFetcher creates a new instance of StatFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStatFetcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *StatFetcher {
	mock := &StatFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
