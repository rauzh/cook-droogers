// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	base "cookdroogers/internal/requests/base"

	mock "github.com/stretchr/testify/mock"
)

// IRequest is an autogenerated mock type for the IRequest type
type IRequest struct {
	mock.Mock
}

type IRequest_Expecter struct {
	mock *mock.Mock
}

func (_m *IRequest) EXPECT() *IRequest_Expecter {
	return &IRequest_Expecter{mock: &_m.Mock}
}

// GetType provides a mock function with given fields:
func (_m *IRequest) GetType() base.RequestType {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetType")
	}

	var r0 base.RequestType
	if rf, ok := ret.Get(0).(func() base.RequestType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(base.RequestType)
	}

	return r0
}

// IRequest_GetType_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetType'
type IRequest_GetType_Call struct {
	*mock.Call
}

// GetType is a helper method to define mock.On call
func (_e *IRequest_Expecter) GetType() *IRequest_GetType_Call {
	return &IRequest_GetType_Call{Call: _e.mock.On("GetType")}
}

func (_c *IRequest_GetType_Call) Run(run func()) *IRequest_GetType_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IRequest_GetType_Call) Return(_a0 base.RequestType) *IRequest_GetType_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IRequest_GetType_Call) RunAndReturn(run func() base.RequestType) *IRequest_GetType_Call {
	_c.Call.Return(run)
	return _c
}

// Validate provides a mock function with given fields: _a0
func (_m *IRequest) Validate(_a0 base.RequestType) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Validate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(base.RequestType) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IRequest_Validate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Validate'
type IRequest_Validate_Call struct {
	*mock.Call
}

// Validate is a helper method to define mock.On call
//   - _a0 base.RequestType
func (_e *IRequest_Expecter) Validate(_a0 interface{}) *IRequest_Validate_Call {
	return &IRequest_Validate_Call{Call: _e.mock.On("Validate", _a0)}
}

func (_c *IRequest_Validate_Call) Run(run func(_a0 base.RequestType)) *IRequest_Validate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(base.RequestType))
	})
	return _c
}

func (_c *IRequest_Validate_Call) Return(_a0 error) *IRequest_Validate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IRequest_Validate_Call) RunAndReturn(run func(base.RequestType) error) *IRequest_Validate_Call {
	_c.Call.Return(run)
	return _c
}

// NewIRequest creates a new instance of IRequest. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIRequest(t interface {
	mock.TestingT
	Cleanup(func())
}) *IRequest {
	mock := &IRequest{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
