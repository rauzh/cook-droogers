{"name":"Apply: OK","fullName":"TestPublishRequestUseCaseSuiteRunner/PublishRequestUseCaseSuite/TestPublishRequestUseCase_ApplyOK","status":"failed","statusDetails":{"message":"\n\nmock: Unexpected Method Call\n-----------------------------\n\nSendMessage(*sarama.ProducerMessage)\n\t\t0: \u0026sarama.ProducerMessage{Topic:\"publish_request_proceed_to_manager\", Key:sarama.Encoder(nil), Value:\"{\\\"request_id\\\":1,\\\"type\\\":\\\"Publish\\\",\\\"status\\\":\\\"New\\\",\\\"date\\\":\\\"2024-09-29T00:00:00Z\\\",\\\"applier_id\\\":12,\\\"manager_id\\\":8,\\\"release_id\\\":777,\\\"grade\\\":-3,\\\"expected_date\\\":\\\"2025-09-29T00:00:00Z\\\",\\\"description\\\":\\\"Test description\\\"}\", Headers:[]sarama.RecordHeader(nil), Metadata:interface {}(nil), Offset:0, Partition:0, Timestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), retries:0, flags:0, expectation:(chan *sarama.ProducerError)(nil), sequenceNumber:0, producerEpoch:0, hasSequence:false}\n\nThe closest call I have is: \n\nSendMessage(mock.anythingOfTypeArgument)\n\t\t0: \"context.backgroundCtx\"\n\n\nDiff: 0: FAIL:  type context.backgroundCtx != type  - (*sarama.ProducerMessage=\u0026{publish_request_proceed_to_manager \u003cnil\u003e {\"request_id\":1,\"type\":\"Publish\",\"status\":\"New\",\"date\":\"2024-09-29T00:00:00Z\",\"applier_id\":12,\"manager_id\":8,\"release_id\":777,\"grade\":-3,\"expected_date\":\"2025-09-29T00:00:00Z\",\"description\":\"Test description\"} [] \u003cnil\u003e 0 0 0001-01-01 00:00:00 +0000 UTC 0 0 \u003cnil\u003e 0 0 false})","trace":"\n\n\nmock: Unexpected Method Call\n-----------------------------\n\nSendMessage(*sarama.ProducerMessage)\n\t\t0: \u0026sarama.ProducerMessage{Topic:\"publish_request_proceed_to_manager\", Key:sarama.Encoder(nil), Value:\"{\\\"request_id\\\":1,\\\"type\\\":\\\"Publish\\\",\\\"status\\\":\\\"New\\\",\\\"date\\\":\\\"2024-09-29T00:00:00Z\\\",\\\"applier_id\\\":12,\\\"manager_id\\\":8,\\\"release_id\\\":777,\\\"grade\\\":-3,\\\"expected_date\\\":\\\"2025-09-29T00:00:00Z\\\",\\\"description\\\":\\\"Test description\\\"}\", Headers:[]sarama.RecordHeader(nil), Metadata:interface {}(nil), Offset:0, Partition:0, Timestamp:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), retries:0, flags:0, expectation:(chan *sarama.ProducerError)(nil), sequenceNumber:0, producerEpoch:0, hasSequence:false}\n\nThe closest call I have is: \n\nSendMessage(mock.anythingOfTypeArgument)\n\t\t0: \"context.backgroundCtx\"\n\n\nDiff: 0: FAIL:  type context.backgroundCtx != type  - (*sarama.ProducerMessage=\u0026{publish_request_proceed_to_manager \u003cnil\u003e {\"request_id\":1,\"type\":\"Publish\",\"status\":\"New\",\"date\":\"2024-09-29T00:00:00Z\",\"applier_id\":12,\"manager_id\":8,\"release_id\":777,\"grade\":-3,\"expected_date\":\"2025-09-29T00:00:00Z\",\"description\":\"Test description\"} [] \u003cnil\u003e 0 0 0001-01-01 00:00:00 +0000 UTC 0 0 \u003cnil\u003e 0 0 false})"},"start":1727641731202,"stop":1727641731204,"uuid":"706120a2-7ea1-11ef-b0c1-be2bab8c44a1","historyId":"79c80960f51e400f4dcf39158d49349d","testCaseId":"4dac29ad30eb6ec59d1b40a2998cd7da","labels":[{"name":"language","value":"go1.23.1"},{"name":"framework","value":"Allure-Go@v0.6.0"},{"name":"host","value":"MacBook-Pro-Pavel-2.local"},{"name":"thread","value":"TestPublishRequestUseCaseSuiteRunner/PublishRequestUseCaseSuite/TestPublishRequestUseCase_ApplyOK"},{"name":"suite","value":"PublishRequestUseCaseSuite"},{"name":"package","value":"cookdroogers/internal/requests/publish/usecase"},{"name":"tag","value":"PublishRequestUseCase"}],"steps":[{"name":"Success","status":"passed","start":1727641731204,"stop":1727641731204}]}