{"name":"SetMeta: Success","fullName":"TestSignContractRequestPgRepoSuiteRunner/SignContractRequestPgRepoSuite/TestSignContractRequestPgRepo_SetMetaSuccess","status":"broken","statusDetails":{"message":"test panicked: runtime error: index out of range [0] with length 0\ngoroutine 51 [running]:\nruntime/d","trace":"test panicked: runtime error: index out of range [0] with length 0\ngoroutine 51 [running]:\nruntime/debug.Stack()\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/runtime/debug/stack.go:26 +0x64\ngithub.com/ozontech/allure-go/pkg/framework/core/common.(*Common).WithNewStep.func1()\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/ozontech/allure-go/pkg/framework/core/common/steps.go:22 +0xb4\npanic({0x104b70fe0?, 0x14000138a38?})\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/runtime/panic.go:785 +0x124\ngithub.com/DATA-DOG/go-sqlmock.(*rowSets).Close(0x1400013bf00)\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/DATA-DOG/go-sqlmock/rows.go:40 +0x64\ndatabase/sql.(*Rows).close.func1()\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3450 +0x34\ndatabase/sql.withLock({0x104bb1238, 0x14000288400}, 0x14000185128)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3566 +0x74\ndatabase/sql.(*Rows).close(0x140001c97c0, {0x0, 0x0})\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3449 +0x12c\ndatabase/sql.(*Rows).Close(0x140001c97c0)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3433 +0x30\npanic({0x104b70fe0?, 0x14000138a20?})\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/runtime/panic.go:785 +0x124\ngithub.com/DATA-DOG/go-sqlmock.(*rowSets).Columns(0x2?)\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/DATA-DOG/go-sqlmock/rows.go:34 +0x50\ndatabase/sql.(*Rows).nextLocked(0x140001c97c0)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3055 +0xe0\ndatabase/sql.(*Rows).Next.func1()\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3033 +0x30\ndatabase/sql.withLock({0x104bb0c08, 0x140001c97f8}, 0x140001853c8)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3566 +0x74\ndatabase/sql.(*Rows).Next(0x140001c97c0)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/database/sql/sql.go:3032 +0x74\ngithub.com/jmoiron/sqlx.(*Row).Scan(0x14000286480, {0x0?, 0x105013c60?, 0x0})\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/jmoiron/sqlx/sqlx.go:201 +0x118\ncookdroogers/internal/requests/sign_contract/repo/pg.(*SignContractRequestPgRepo).SetMeta(0x140001dfd30, {0x104bb5140, 0x105013c60}, 0x140001cf880)\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/internal/requests/sign_contract/repo/pg/sign_req.go:56 +0x17c\ncookdroogers/internal/requests/sign_contract/repo/pg.(*SignContractRequestPgRepoSuite).TestSignContractRequestPgRepo_SetMetaSuccess.func1({0x105483a30, 0x140001cf810})\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/internal/requests/sign_contract/repo/pg/sign_req_test.go:176 +0x1ec\ngithub.com/ozontech/allure-go/pkg/framework/core/common.(*Common).WithNewStep(0x14000111800, {0x10498e74b?, 0x7?}, 0x140001dfdb0, {0x0?, 0x0?, 0x0?})\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/ozontech/allure-go/pkg/framework/core/common/steps.go:27 +0x138\ncookdroogers/internal/requests/sign_contract/repo/pg.(*SignContractRequestPgRepoSuite).TestSignContractRequestPgRepo_SetMetaSuccess(0x14000112500, {0x104bc11e0, 0x14000111800})\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/internal/requests/sign_contract/repo/pg/sign_req_test.go:158 +0x118\nreflect.Value.call({0x14000112b40?, 0x1400012e3b0?, 0x14000126d58?}, {0x10498db2c, 0x4}, {0x14000286450, 0x2, 0x1049902a6?})\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/reflect/value.go:581 +0x97c\nreflect.Value.Call({0x14000112b40?, 0x1400012e3b0?, 0x14000126e08?}, {0x14000286450?, 0x104ba9660?, 0x0?})\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/reflect/value.go:365 +0x94\ngithub.com/ozontech/allure-go/pkg/framework/runner.(*testMethod).GetBody.func1({0x104bc11e0?, 0x14000111800?})\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/ozontech/allure-go/pkg/framework/runner/tests.go:155 +0x224\ngithub.com/ozontech/allure-go/pkg/framework/runner.(*runner).RunTests.func1.3.1(0x140001f3520)\n\t/Users/rauzh/Desktop/cook_droogers/PPO_DB/cook-droogers/backend/vendor/github.com/ozontech/allure-go/pkg/framework/runner/runner.go:206 +0x310\ntesting.tRunner(0x140001f3520, 0x14000280500)\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/testing/testing.go:1690 +0xe4\ncreated by testing.(*T).Run in goroutine 22\n\t/Users/rauzh/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.1.darwin-arm64/src/testing/testing.go:1743 +0x314\n"},"start":1727635307222,"stop":1727635307223,"uuid":"7b633508-7e92-11ef-b511-be2bab8c44a1","historyId":"7fd538a664d46fd3cb9de43870f124a0","testCaseId":"573d0a214a099c420918f5f7f30da692","labels":[{"name":"language","value":"go1.23.1"},{"name":"framework","value":"Allure-Go@v0.6.0"},{"name":"host","value":"MacBook-Pro-Pavel-2.local"},{"name":"thread","value":"TestSignContractRequestPgRepoSuiteRunner/SignContractRequestPgRepoSuite/TestSignContractRequestPgRepo_SetMetaSuccess"},{"name":"suite","value":"SignContractRequestPgRepoSuite"},{"name":"package","value":"cookdroogers/internal/requests/sign_contract/repo/pg"},{"name":"tag","value":"SignContractRequestPgRepo"}],"steps":[{"name":"Success","status":"broken","start":1727635307223,"stop":1727635307223}]}